import pandas as pd
import numpy as np
from catboost import CatBoostRegressor
import joblib

# === –ö–û–ù–°–¢–ê–ù–¢–´ ===
MODEL_PATH = 'energy_forecast_model.cbm'  # –ü—É—Ç—å –∫ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
SAMPLE_DATA_PATH = 'sample_prediction_data.csv'  # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è

def load_model():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏"""
    print("–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...")
    model = CatBoostRegressor()
    model.load_model(MODEL_PATH)
    print("–ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    return model

def prepare_sample_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è"""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—É–¥—É—Ç –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
    sample_data = {
        'hour': [14, 15, 16, 17, 18],
        'dayofweek': [1, 1, 1, 1, 1],  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
        'month': [3, 3, 3, 3, 3],      # –ú–∞—Ä—Ç
        'temperature': [5.0, 6.0, 7.0, 6.5, 5.5],
        'humidity': [80, 78, 75, 77, 80],
        'wind_speed': [3.0, 3.5, 4.0, 3.5, 3.0],
        'consumption_lag_1': [1200, 1250, 1300, 1280, 1260],
        'consumption_lag_2': [1180, 1200, 1250, 1300, 1280],
        'consumption_lag_3': [1150, 1180, 1200, 1250, 1300],
        'consumption_lag_24': [1100, 1120, 1150, 1180, 1200],
        'consumption_lag_48': [1080, 1100, 1120, 1150, 1180],
        'consumption_lag_168': [1150, 1160, 1180, 1200, 1220],
        'consumption_rolling_mean_3': [1170, 1210, 1250, 1270, 1280],
        'consumption_rolling_mean_6': [1150, 1180, 1210, 1240, 1260],
        'consumption_rolling_mean_12': [1120, 1150, 1180, 1210, 1230],
        'consumption_rolling_mean_24': [1100, 1120, 1150, 1180, 1200],
        'consumption_rolling_std_3': [50, 55, 60, 58, 55],
        'consumption_rolling_std_6': [45, 50, 55, 53, 50],
        'consumption_rolling_std_12': [40, 45, 50, 48, 45],
        'consumption_rolling_std_24': [35, 40, 45, 43, 40],
        'is_holiday': [0, 0, 0, 0, 0],
        'is_working_weekend': [0, 0, 0, 0, 0],
        'is_regular_weekend': [0, 0, 0, 0, 0],
        'is_working_day': [1, 1, 1, 1, 1],
        'is_weekend_or_holiday': [0, 0, 0, 0, 0],
        'is_weekend': [0, 0, 0, 0, 0]
    }
    
    df_sample = pd.DataFrame(sample_data)
    df_sample.to_csv(SAMPLE_DATA_PATH, index=False)
    print(f"–ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {SAMPLE_DATA_PATH}")
    return df_sample

def make_predictions():
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π"""
    print("=== –í–´–ü–û–õ–ù–ï–ù–ò–ï –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô ===")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
    model = load_model()
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    df_sample = prepare_sample_data()
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
    predictions = model.predict(df_sample)
    
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô ===")
    for i, pred in enumerate(predictions):
        print(f"–ß–∞—Å {df_sample.iloc[i]['hour']}:00 - {pred:.1f} –ú–í—Ç")
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    results_df = df_sample.copy()
    results_df['predicted_consumption'] = predictions
    results_df.to_csv('predictions_results.csv', index=False)
    print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ predictions_results.csv")
    
    return predictions

def explain_model():
    """–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —Ä–∞–±–æ—Ç—ã –º–æ–¥–µ–ª–∏"""
    print("\n" + "="*60)
    print("–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–û–î–ï–õ–ò –ò –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–Ø–•")
    print("="*60)
    
    print("""
üéØ –ß–¢–û –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø –î–õ–Ø –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô:

üî¢ –ß–ò–°–õ–û–í–´–ï –ü–†–ò–ó–ù–ê–ö–ò:
‚Ä¢ hour (0-23) - –ß–∞—Å —Å—É—Ç–æ–∫
‚Ä¢ dayofweek (0-6) - –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏
‚Ä¢ month (1-12) - –ú–µ—Å—è—Ü
‚Ä¢ temperature - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)
‚Ä¢ humidity - –í–ª–∞–∂–Ω–æ—Å—Ç—å (%)
‚Ä¢ wind_speed - –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ (–º/—Å)
‚Ä¢ consumption_lag_* - –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤ –ø—Ä–æ—à–ª–æ–º
‚Ä¢ consumption_rolling_* - –°–∫–æ–ª—å–∑—è—â–∏–µ —Å—Ä–µ–¥–Ω–∏–µ

üìã –ö–ê–¢–ï–ì–û–†–ò–ê–õ–¨–ù–´–ï –ü–†–ò–ó–ù–ê–ö–ò:
‚Ä¢ is_holiday - –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –¥–µ–Ω—å
‚Ä¢ is_working_day - –†–∞–±–æ—á–∏–π –¥–µ–Ω—å
‚Ä¢ is_weekend - –í—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å
‚Ä¢ is_weekend_or_holiday - –í—ã—Ö–æ–¥–Ω–æ–π –∏–ª–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫

üß† –ü–†–ò–ù–¶–ò–ü –†–ê–ë–û–¢–´ –ú–û–î–ï–õ–ò:
1. CatBoost —Å—Ç—Ä–æ–∏—Ç –∞–Ω—Å–∞–º–±–ª—å –¥–µ—Ä–µ–≤—å–µ–≤ —Ä–µ—à–µ–Ω–∏–π
2. –ö–∞–∂–¥–æ–µ –¥–µ—Ä–µ–≤–æ —É—á–∏—Ç—Å—è –Ω–∞ –æ—à–∏–±–∫–∞—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö
3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
4. –£—Å—Ç–æ–π—á–∏–≤ –∫ –≤—ã–±—Ä–æ—Å–∞–º –∏ –ø—Ä–æ–ø—É—Å–∫–∞–º

üì• –ß–¢–û –û–ñ–ò–î–ê–ï–¢–°–Ø –ù–ê –í–•–û–î:
DataFrame —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞–º
–í—Å–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
–ö–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 0/1

üìà –¢–û–ß–ù–û–°–¢–¨ –ú–û–î–ï–õ–ò:
–¶–µ–ª—å: MAE < 2.5% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç—Ä–∏–∫–∞ MAE (—Å—Ä–µ–¥–Ω—è—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –æ—à–∏–±–∫–∞)
""")
    
    print("="*60)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        explain_model()
        predictions = make_predictions()
        print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

if __name__ == "__main__":
    main()
